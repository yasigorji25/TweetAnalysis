{"version":3,"sources":["chart.js","App.js","serviceWorker.js","index.js","trump.jpg","biden3.jpg"],"names":["pie","ShowPieChart","callbacksT","getWordTooltip","wordsTP","text","value","callbacksB","wordsB","options","rotations","rotationAngles","fontSizes","useState","pieDataTrump","setPieDataTrump","pieDataBiden","setPieDataBiden","setWordsTP","setWordsB","hashtag","setHashtag","dataTrump","labels","datasets","data","backgroundColor","hoverBackgroundColor","optionT","legend","position","padding","tooltips","callbacks","label","tooltipItem","dataset","datasetIndex","total","reduce","previousValue","currentValue","currentIndex","array","index","Math","floor","title","optionB","dataBiden","size","handleChange","event","target","fetch","then","res","json","TrumpFeedback","BidenFeedback","Keywords","TrumpWordCloud","BidenWordCloud","Container","Row","Col","xs","sm","ButtonDropdown","isOpen","toggle","console","log","DropdownToggle","caret","disabled","DropdownMenu","DropdownItem","name","onClick","Image","src","trumpImg","roundedCircle","width","height","className","bidenImg3","style","words","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.01ec5c29.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Pie } from 'react-chartjs-2';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Container, Row, Col } from 'reactstrap';\nimport Image from 'react-bootstrap/Image'\nimport trumpImg from './trump.jpg'\nimport bidenImg3 from './biden3.jpg'\nimport ReactWordcloud from 'react-wordcloud';\n\nexport default function pie() {\n\n    return (\n        <main>\n            <ShowPieChart />\n        </main>\n    )\n}\nconst callbacksT = {\n    getWordTooltip: wordsTP => `${wordsTP.text} (${wordsTP.value * 15})`,\n}\nconst callbacksB = {\n    getWordTooltip: wordsB => `${wordsB.text} (${wordsB.value * 15})`,\n}\nconst options = {\n    rotations: 2,\n    rotationAngles: [-45, 45],\n    fontSizes: [12, 50]\n\n};\n\nfunction ShowPieChart() {\n    const [pieDataTrump, setPieDataTrump] = useState([]);\n    const [pieDataBiden, setPieDataBiden] = useState([]);\n    const [wordsTP, setWordsTP] = useState([]);\n    const [wordsB, setWordsB] = useState([]);\n    const [hashtag, setHashtag] = useState();\n\n    const dataTrump = {\n        labels: [\n            'Positive',\n            'Negative',\n            'Netural'\n\n        ],\n        datasets: [{\n            data: pieDataTrump,\n            backgroundColor: [\n                '#36A2EB',\n                '#FF6384',\n                '#FFCE56'\n            ],\n            hoverBackgroundColor: [\n                '#36A2EB',\n                '#FF6384',\n                '#FFCE56'\n            ],\n\n        }],\n\n    }\n    const optionT = {\n        legend: {\n            position: 'left',\n\n            labels: {\n                padding: 20\n            }\n        },\n        tooltips: {\n            callbacks: {\n                label: function (tooltipItem, data) {\n                    var dataset = data.datasets[tooltipItem.datasetIndex];\n                    var total = dataset.data.reduce(function (previousValue, currentValue, currentIndex, array) {\n                        return previousValue + currentValue;\n                    });\n                    var currentValue = dataset.data[tooltipItem.index];\n                    var percentage = Math.floor(((currentValue / total) * 100) + 0.5);\n                    return percentage + \"%\";\n                },\n                title: function (tooltipItem, data) {\n                    return data.labels[tooltipItem[0].index];\n                }\n            }\n        }\n    }\n    const optionB = {\n        legend: {\n            position: 'right',\n\n            labels: {\n                padding: 20\n\n            }\n        },\n        tooltips: {\n            callbacks: {\n                label: function (tooltipItem, data) {\n                    var dataset = data.datasets[tooltipItem.datasetIndex];\n                    var total = dataset.data.reduce(function (previousValue, currentValue, currentIndex, array) {\n                        return previousValue + currentValue;\n                    });\n                    var currentValue = dataset.data[tooltipItem.index];\n                    var percentage = Math.floor(((currentValue / total) * 100) + 0.5);\n                    return percentage + \"%\";\n                },\n                title: function (tooltipItem, data) {\n                    return data.labels[tooltipItem[0].index];\n                }\n            }\n        }\n    }\n    const dataBiden = {\n        labels: [\n            'Positive',\n            'Negative',\n            'Netural'\n        ],\n        datasets: [{\n            data: pieDataBiden,\n            backgroundColor: [\n                '#36A2EB',\n                '#FF6384',\n                '#FFCE56'\n            ],\n            hoverBackgroundColor: [\n                '#36A2EB',\n                '#FF6384',\n                '#FFCE56'\n            ]\n        }]\n    };\n    const size = [600, 400];\n\n    const toggle = () => console.log();\n\n    const handleChange = event => {\n        setWordsTP([]);\n        setWordsB([]);\n        setHashtag(event.target.value);\n        fetch(`/sentiment/${event.target.value}`)\n            .then(res => res.json())\n            .then(data => setPieDataTrump(data.TrumpFeedback) & setPieDataBiden(data.BidenFeedback) & setWordsTP(data.Keywords.TrumpWordCloud) &\n                setWordsB(data.Keywords.BidenWordCloud)\n            );\n    };\n\n    return (\n        <div>\n        <Container>\n        <Row>\n            <Col xs=\"6\" sm=\"4\" />\n            <Col xs=\"6\" sm=\"4\" >\n                <ButtonDropdown isOpen={true} toggle={toggle}>\n                    <DropdownToggle caret disabled>\n                        Select hashtag\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem name=\"election\" value=\"election\" onClick={handleChange}># Election</DropdownItem>\n                        <DropdownItem name=\"democrats\" value=\"democrats\" onClick={handleChange}># Democrats</DropdownItem>\n                        <DropdownItem name=\"politics\" value=\"politics\" onClick={handleChange}># Politics</DropdownItem>\n                        <DropdownItem name=\"republican\" value=\"republican\" onClick={handleChange}># Republican</DropdownItem>\n                    </DropdownMenu>\n                </ButtonDropdown>\n            </Col>\n            <Col sm=\"4\" />\n        </Row>\n        <Row>\n\n            <Col xs=\"6\" sm=\"4\">\n                <Image src={trumpImg} roundedCircle width=\"171\" height=\"180\" />\n                <h3>Trump</h3>\n            </Col>\n            <Col xs=\"6\" sm=\"4\" >\n                <span className=\"vs\">\n                    <p size=\"40\">VS</p>\n                </span>\n            </Col>\n            <Col sm=\"4\">\n                <Image src={bidenImg3} roundedCircle width=\"176\" height=\"185\" />\n                <h3>Biden</h3>\n            </Col>\n\n        </Row>\n    </Container >\n    <div>\n            <h3> Feedback for #{hashtag} </h3>\n            <Row style={{'width':'100%'}}>\n                <Col xs=\"4\">\n                    <Pie data={dataTrump} width={150}\n                        height={50} options={optionT} />\n                    <ReactWordcloud\n                        callbacks={callbacksT}\n                        options={options}\n                        size={size}\n                        words={wordsTP} />\n                </Col>\n                <Col xs=\"4\"></Col>\n                <Col xs=\"4\">\n                    <Pie data={dataBiden} width={150}\n                        height={50} options={optionB} />\n                    <ReactWordcloud\n                        callbacks={callbacksB}\n                        options={options}\n                        size={size}\n                        words={wordsB} />\n                </Col>\n            </Row>\n        </div >\n        </div>\n    );\n}","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport pie from \"./chart.js\"\r\n// import WordCloud from \"./wordCloud.js\"\r\n\r\n// Handel routing for whole pages of the app.\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/\" component={pie}></Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/trump.1b599265.jpg\";","module.exports = __webpack_public_path__ + \"static/media/biden3.3e3c6cfc.jpg\";"],"sourceRoot":""}